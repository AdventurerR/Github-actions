name: Galaxy Brain Automation

on:
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours
  workflow_dispatch:

jobs:
  galaxy-brain:
    runs-on: ubuntu-latest
    steps:
      - name: Check Discussions Enabled
        id: check-discussions
        run: |
          # First check if discussions are enabled for this repo
          REPO_INFO=$(curl -s -H "Authorization: token ${{ secrets.ACTIONS_BOT_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }})
          
          HAS_DISCUSSIONS=$(echo "$REPO_INFO" | jq -r '.has_discussions')
          
          if [ "$HAS_DISCUSSIONS" != "true" ]; then
            echo "❌ Discussions are not enabled for this repository"
            exit 1
          fi
          
          echo "✅ Discussions are enabled for this repository"

      - name: Generate Random Question
        id: generate-question
        run: |
          QUESTIONS=(
            "How do I install this project?"
            "What are the main features?"
            "How do I contribute to this project?"
            "What is the license?"
            "How do I run tests?"
            "What dependencies are required?"
            "How do I deploy this project?"
            "What is the project structure?"
          )
          
          RANDOM_INDEX=$((RANDOM % ${#QUESTIONS[@]}))
          SELECTED_QUESTION="${QUESTIONS[$RANDOM_INDEX]}"
          
          echo "question=$SELECTED_QUESTION" >> $GITHUB_OUTPUT
          echo "Selected question: $SELECTED_QUESTION"

      - name: Generate Random Answer
        id: generate-answer
        run: |
          ANSWERS=(
            "You can install this project by running \`npm install\` or \`yarn install\` in the project directory. Make sure you have Node.js installed first."
            "The main features include automated workflows, CI/CD integration, and various GitHub automation tools to help streamline your development process."
            "To contribute, fork the repository, create a feature branch, make your changes, and submit a pull request. Please read the CONTRIBUTING.md file for guidelines."
            "This project is typically licensed under MIT or similar open-source licenses. Check the LICENSE file in the repository root for specific details."
            "Run tests using \`npm test\` or \`yarn test\`. For specific test suites, you can use \`npm run test:unit\` or \`npm run test:integration\`."
            "Check the package.json file for Node.js dependencies, or requirements.txt for Python projects. Install them using the appropriate package manager."
            "Deployment depends on your hosting platform. Common options include GitHub Pages, Vercel, Netlify, or traditional hosting services."
            "The project follows a standard structure with source code in src/, tests in test/, configuration files in the root, and documentation in docs/."
          )
          
          RANDOM_INDEX=$((RANDOM % ${#ANSWERS[@]}))
          SELECTED_ANSWER="${ANSWERS[$RANDOM_INDEX]}"
          
          echo "answer=$SELECTED_ANSWER" >> $GITHUB_OUTPUT
          echo "Selected answer: $SELECTED_ANSWER"

      - name: Post a new discussion
        id: create-discussion
        run: |
          DISCUSSION_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.HELPER_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/discussions \
            -d "{\"title\":\"${{ steps.generate-question.outputs.question }}\",\"body\":\"${{ steps.generate-question.outputs.question }}\n\nPlease explain how to solve this.\"}")
          
          # Check if the discussion was created successfully
          if echo "$DISCUSSION_RESPONSE" | jq -e '.number' > /dev/null 2>&1; then
            DISCUSSION_NUMBER=$(echo "$DISCUSSION_RESPONSE" | jq -r '.number')
            echo "discussion_number=$DISCUSSION_NUMBER" >> $GITHUB_OUTPUT
            echo "Created discussion #$DISCUSSION_NUMBER"
          else
            echo "❌ Failed to create discussion. Response: $DISCUSSION_RESPONSE"
            exit 1
          fi
          
          # Wait a bit before posting answer
          sleep 5

      - name: Post answer from your account
        id: post-answer
        run: |
          ANSWER_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.ACTIONS_BOT_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/discussions/${{ steps.create-discussion.outputs.discussion_number }}/comments \
            -d "{\"body\":\"${{ steps.generate-answer.outputs.answer }}\"}")
          
          # Check if the comment was posted successfully
          if echo "$ANSWER_RESPONSE" | jq -e '.id' > /dev/null 2>&1; then
            COMMENT_ID=$(echo "$ANSWER_RESPONSE" | jq -r '.id')
            echo "comment_id=$COMMENT_ID" >> $GITHUB_OUTPUT
            echo "Posted answer with comment ID $COMMENT_ID"
          else
            echo "❌ Failed to post answer. Response: $ANSWER_RESPONSE"
            exit 1
          fi
          
          # Wait a bit before marking as accepted
          sleep 5

      - name: Mark answer as accepted (needs repo admin/helper account)
        run: |
          ACCEPT_RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token ${{ secrets.HELPER_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/discussions/comments/${{ steps.post-answer.outputs.comment_id }} \
            -d '{"is_answer":true}')
          
          # Check if the answer was marked as accepted successfully
          if echo "$ACCEPT_RESPONSE" | jq -e '.id' > /dev/null 2>&1; then
            echo "✅ Answer marked as accepted!"
          else
            echo "⚠️  Warning: Failed to mark answer as accepted. Response: $ACCEPT_RESPONSE"
            echo "This might be due to insufficient permissions or the comment doesn't exist."
          fi

      - name: Log Success
        run: |
          echo "🎯 Galaxy Brain automation completed successfully!"
          echo "📝 Created discussion: ${{ steps.create-discussion.outputs.discussion_number }}"
          echo "💬 Posted answer with ID: ${{ steps.post-answer.outputs.comment_id }}"
          echo "✅ Marked answer as accepted"
          echo "⏰ Next run scheduled for 6 hours from now" 